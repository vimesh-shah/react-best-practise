{"version":3,"sources":["components/common/NavMenu.jsx","components/login/LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavMenu","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","LoginForm","initialValues","email","password","remember","validate","values","errors","onSubmit","setSubmitting","console","log","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Group","controlId","Label","Control","name","onChange","onBlur","value","Text","Check","label","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f1fc957.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormControl, Nav, Navbar } from \"react-bootstrap\";\n\nfunction NavMenu() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">React Best Practises</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#home\">Home</Nav.Link>\n        <Nav.Link href=\"#features\">Features</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n      </Nav>\n      <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-primary\">Search</Button>\n      </Form>\n    </Navbar>\n  );\n}\n\nexport default NavMenu;\n","import { Formik } from \"formik\";\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction LoginForm() {\n  const initialValues = { email: \"\", password: \"\", remember: false };\n\n  const validateForm = (values) => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = \"Please enter email\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Please enter password\";\n    }\n\n    return errors;\n  };\n\n  const onSubmitForm = (values, { setSubmitting }) => {\n    console.log(values);\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validateForm}\n      onSubmit={onSubmitForm}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            {errors.email && touched.email && (\n              <Form.Text className=\"text-danger\">{errors.email}</Form.Text>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            {errors.password && touched.password && (\n              <Form.Text className=\"text-danger\">{errors.password}</Form.Text>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Remember Me\"\n              name=\"remember\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.remember}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavMenu from \"./components/common/NavMenu\";\nimport LoginForm from \"./components/login/LoginForm\";\n\nfunction App() {\n  return (\n    <div>\n      <NavMenu />\n      <br />\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col col-4\">\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}